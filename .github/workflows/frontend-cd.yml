# Make sure Docker is installed already on EC2 Instance and AWS CLI v2 is installed
# Also make sure ec2 ip is configured in environment.ts file
name: Frontend CD
on:
  workflow_dispatch:
jobs:
  build:
    name: Deploying docker image to AWS EC2
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Login
        run: sudo docker login -u AWS -p $(aws ecr get-login-password) 715841355249.dkr.ecr.ap-south-1.amazonaws.com

      - name: Remove older container
        run: sudo docker rm -f mf-karr-container || true

      - name: Delete older image and Pull latest image
        run: |
          [ $(sudo docker images -q '715841355249.dkr.ecr.ap-south-1.amazonaws.com/glokelov/mf-karr' | wc -l) -ge 1 ] && sudo docker rmi $(sudo docker images -q '715841355249.dkr.ecr.ap-south-1.amazonaws.com/glokelov/mf-karr')
          sudo docker pull 715841355249.dkr.ecr.ap-south-1.amazonaws.com/glokelov/mf-karr:latest

      - name: Run Docker Container
        run: |
          sudo docker run -p 3000:3000 \
            -e NEXT_PUBLIC_API_URL="http://{{ secrets.AWS_EC2_IP }}:8081" \
            -e AUTH_GITHUB_CLIENT_ID="{{ secrets.AUTH_GITHUB_CLIENT_ID }}" \
            -e AUTH_GITHUB_CLIENT_SECRET="{{ secrets.AUTH_GITHUB_CLIENT_SECRET }}" \
            -e AUTH_GOOGLE_CLIENT_ID="{{ secrets.AUTH_GOOGLE_CLIENT_ID }}" \
            -e AUTH_GOOGLE_CLIENT_SECRET="{{ secrets.AUTH_GOOGLE_CLIENT_SECRET }}" \
            -e NEXT_AUTH_SECRET="{{ secrets.NEXT_AUTH_SECRET }}" \
            -d --name mf-karr-container 715841355249.dkr.ecr.ap-south-1.amazonaws.com/glokelov/mf-karr:latest
