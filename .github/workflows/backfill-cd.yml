name: DB Backfill Script CD
on:
  workflow_dispatch:
jobs:
  AWS-ECR-Login-Using-Docker:
    name: Pulling Backfill Script image to AWS EC2
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Login
        run: |
          sudo docker login -u AWS -p $(aws ecr get-login-password) 715841355249.dkr.ecr.ap-south-1.amazonaws.com

      - name: Delete older image and Pull latest image
        run: |
          [ $(sudo docker images -q '715841355249.dkr.ecr.ap-south-1.amazonaws.com/glokelov/backfill-script' | wc -l) -ge 1 ] && sudo docker rmi $(sudo docker images -q '715841355249.dkr.ecr.ap-south-1.amazonaws.com/glokelov/backfill-script')
          sudo docker pull 715841355249.dkr.ecr.ap-south-1.amazonaws.com/glokelov/backfill-script:latest

  Run-Backfill:
    name: Run Backfill Script
    runs-on: self-hosted
    needs: AWS-ECR-Login-Using-Docker
    strategy:
      matrix:
        # range: [100000, 110000, 120000, 130000, 140000, 150000]
        range: [100000]
      max-parallel: 1
    steps:
      - name: Set next range value
        id: set_next_range
        run: echo "NEXT_RANGE=$(( ${{ matrix.range }} + 10000 ))" >> $GITHUB_ENV

      - name: Remove older container for range ${{ matrix.range }}
        run: sudo docker rm -f db-backfill-script-container-${{ matrix.range }} || true

      - name: Use next range value
        run: echo "Next range value is $NEXT_RANGE"

      - name: Run Docker Container for range ${{ matrix.range }}
        run: |
          sudo docker run --name db-backfill-script-container-${{ matrix.range }} 715841355249.dkr.ecr.ap-south-1.amazonaws.com/glokelov/backfill-script:latest ${{ matrix.range }} $NEXT_RANGE

      - name: Copy Docker files to EC2
        run: |
          sudo docker cp db-backfill-script-container-${{ matrix.range }}:./app/mf_data_dump.sql ~/backfill-data-${{ matrix.range }}

      - name: Remove Docker Container
        run: |
          sudo docker rm db-backfill-script-container-${{ matrix.range }}
