name: Frontend CI
on:
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT

jobs:
  Build:
    name: Pushing Frontend Image to AWS ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::715841355249:role/github-actions-role
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set Timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.FRONT_END_REPO_NAME }}
        run: |
          cd ./mf-karr
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:mf_karr_$TIMESTAMP .
          echo $IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:mf_karr_$TIMESTAMP

      # - name: Delete ECR Images
      #   env:
      #     ECR_REGISTRY: ${{ secrets.ECR_REGISTRY_NAME }}
      #     ECR_REPOSITORY: ${{ secrets.FRONT_END_REPO_NAME }}
      #   run: |
      #     aws ecr batch-delete-image \
      #       --repository-name glokelov/mf-karr \
      #       --image-ids imageDigest=$(aws ecr list-images --repository-name glokelov/mf-karr --query 'imageIds[?imageTag!=$ECR_REPOSITORY-$TIMESTAMP].imageTag' --output text)
